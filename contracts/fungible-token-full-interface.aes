@compiler >= 4

contract FungibleTokenFullInterface =
  record meta_info =
    { name : string
    , symbol : string
    , decimals : int }

  record allowance_accounts = { from_account : address, for_account : address }
  type allowances = map(allowance_accounts, int)

  datatype event =
    Transfer(address, address, int)
    | Allowance(address, address, int)
    | Burn(address, int)
    | Mint(address, int)
    | Swap(address, int)

  entrypoint aex9_extensions      : unit                    => list(string)
  entrypoint meta_info            : unit                    => meta_info
  entrypoint total_supply         : unit                    => int
  entrypoint owner                : unit                    => address
  entrypoint balances             : unit                    => map(address, int)
  entrypoint balance              : (address)               => option(int)
  entrypoint transfer             : (address, int)          => unit
  entrypoint allowances           : unit                    => allowances
  entrypoint allowance            : (allowance_accounts)    => option(int)
  entrypoint allowance_for_caller : (address)               => option(int)
  entrypoint transfer_allowance   : (address, address, int) => unit
  entrypoint create_allowance     : (address, int)          => unit
  entrypoint change_allowance     : (address, int)          => unit
  entrypoint reset_allowance      : (address)               => unit
  entrypoint burn                 : (int)                   => unit
  entrypoint mint                 : (address, int)          => unit
  entrypoint swap                 : unit                    => unit
  entrypoint check_swap           : (address)               => int
  entrypoint swapped              : unit                    => map(address, int)
